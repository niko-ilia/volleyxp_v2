const mongoose = require('mongoose');

async function cleanupTestUsers() {
  try {
    await mongoose.connect(process.env.MONGODB_URI || 'mongodb+srv://marswonder:dM1savncfQjtSZPY@cluster0.rjtkykh.mongodb.net/volley-match?retryWrites=true&w=majority&appName=Cluster0');
    
    const User = require('../models/User');
    
    // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const testUsers = await User.find({ isTestUser: true });
    console.log(`üìã –ù–∞–π–¥–µ–Ω–æ ${testUsers.length} —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π`);
    
    if (testUsers.length > 0) {
      console.log('üìã –°–ø–∏—Å–æ–∫ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:');
      testUsers.forEach(user => {
        console.log(`  - ${user.email} (${user.name})`);
      });
      
      // –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
      const result = await User.deleteMany({ isTestUser: true });
      console.log(`‚úÖ –£–¥–∞–ª–µ–Ω–æ ${result.deletedCount} —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π`);
    } else {
      console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
    }
    
    await mongoose.connection.close();
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  }
}

cleanupTestUsers(); 