const mongoose = require('mongoose');
const bcrypt = require('bcryptjs');
const User = require('../models/User');
const fs = require('fs');
const path = require('path');

async function restoreAllUsersFromExport() {
  try {
    await mongoose.connect(process.env.MONGODB_URI || 'mongodb+srv://marswonder:dM1savncfQjtSZPY@cluster0.rjtkykh.mongodb.net/volley-match?retryWrites=true&w=majority&appName=Cluster0');
    
    // –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É —ç–∫—Å–ø–æ—Ä—Ç–∞ (–≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞)
    const exportPath = path.join(__dirname, '../../users-export-2025-07-28.json');
    const exportData = JSON.parse(fs.readFileSync(exportPath, 'utf8'));
    
    console.log(`üìã –ù–∞–π–¥–µ–Ω–æ ${exportData.length} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —ç–∫—Å–ø–æ—Ä—Ç–µ`);
    
    let restored = 0;
    let skipped = 0;
    
    for (const userData of exportData) {
      try {
        const existingUser = await User.findOne({ email: userData.email });
        if (existingUser) {
          console.log(`‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º ${userData.email} - —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
          skipped++;
          continue;
        }
        
        const hashedPassword = await bcrypt.hash('password123', 10);
        
        const user = new User({
          _id: new mongoose.Types.ObjectId(userData.id),
          name: userData.name,
          email: userData.email,
          password: hashedPassword,
          role: userData.role,
          rating: userData.rating,
          isBlocked: userData.isBlocked || false,
          emailConfirmed: true,
          ratingHistory: [],
          createdAt: new Date(userData.createdAt),
          lastLoginAt: userData.lastLoginAt ? new Date(userData.lastLoginAt) : new Date()
        });
        
        await user.save();
        console.log(`‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: ${userData.email} (${userData.name}) - ${userData.role}`);
        restored++;
        
      } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è ${userData.email}:`, error.message);
      }
    }
    
    console.log('\nüìä –ò—Ç–æ–≥–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è:');
    console.log(`‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: ${restored} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π`);
    console.log(`‚è≠Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–æ: ${skipped} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π`);
    console.log(`üìß –ü–∞—Ä–æ–ª—å –¥–ª—è –≤—Å–µ—Ö: password123`);
    
    await mongoose.connection.close();
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  }
}

restoreAllUsersFromExport(); 